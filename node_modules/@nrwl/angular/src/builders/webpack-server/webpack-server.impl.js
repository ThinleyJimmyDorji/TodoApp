"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.webpackServer = void 0;
const architect_1 = require("@angular-devkit/architect");
const devkit_1 = require("@nrwl/devkit");
const workspace_1 = require("@nrwl/tao/src/shared/workspace");
const dev_server_1 = require("@angular-devkit/build-angular/src/dev-server");
const fs_1 = require("fs");
const webpack_merge_1 = require("webpack-merge");
const lib_1 = require("./lib");
function webpackServer(schema, context) {
    var _a;
    const options = lib_1.normalizeOptions(schema);
    const workspaceConfig = new workspace_1.Workspaces(context.workspaceRoot).readWorkspaceConfiguration();
    const parsedBrowserTarget = devkit_1.parseTargetString(options.browserTarget);
    const buildTarget = workspaceConfig.projects[parsedBrowserTarget.project].targets[parsedBrowserTarget.target];
    const selectedConfiguration = parsedBrowserTarget.configuration
        ? buildTarget.configurations[parsedBrowserTarget.configuration]
        : buildTarget.defaultConfiguration
            ? buildTarget.configurations[buildTarget.defaultConfiguration]
            : buildTarget.options;
    const customWebpackConfig = (_a = selectedConfiguration.customWebpackConfig) !== null && _a !== void 0 ? _a : buildTarget.options.customWebpackConfig;
    if (customWebpackConfig && customWebpackConfig.path) {
        const pathToWebpackConfig = devkit_1.joinPathFragments(context.workspaceRoot, customWebpackConfig.path);
        if (fs_1.existsSync(pathToWebpackConfig)) {
            return dev_server_1.serveWebpackBrowser(options, context, {
                webpackConfiguration: (baseWebpackConfig) => {
                    const customWebpackConfiguration = require(pathToWebpackConfig);
                    return webpack_merge_1.merge(baseWebpackConfig, customWebpackConfiguration);
                },
            });
        }
        else {
            throw new Error(`Custom Webpack Config File Not Found!\nTo use a custom webpack config, please ensure the path to the custom webpack file is correct: \n${pathToWebpackConfig}`);
        }
    }
    return dev_server_1.serveWebpackBrowser(options, context);
}
exports.webpackServer = webpackServer;
exports.default = architect_1.createBuilder(webpackServer);
//# sourceMappingURL=webpack-server.impl.js.map