"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeOptions = void 0;
const devkit_1 = require("@nrwl/devkit");
const linter_1 = require("@nrwl/linter");
function normalizeOptions(host, options) {
    var _a;
    const { appsDir, npmScope } = devkit_1.getWorkspaceLayout(host);
    const appDirectory = options.directory
        ? `${devkit_1.names(options.directory).fileName}/${devkit_1.names(options.name).fileName}`
        : devkit_1.names(options.name).fileName;
    let e2eProjectName = `${devkit_1.names(options.name).fileName}-e2e`;
    const appProjectName = appDirectory.replace(new RegExp('/', 'g'), '-');
    if (options.e2eTestRunner !== 'cypress') {
        e2eProjectName = `${appProjectName}-e2e`;
    }
    const appProjectRoot = `${appsDir}/${appDirectory}`;
    const e2eProjectRoot = `${appsDir}/${appDirectory}-e2e`;
    const parsedTags = options.tags
        ? options.tags.split(',').map((s) => s.trim())
        : [];
    const defaultPrefix = npmScope;
    // Set defaults and then overwrite with user options
    return Object.assign(Object.assign({ style: 'css', routing: false, inlineStyle: false, inlineTemplate: false, skipTests: false, skipFormat: false, unitTestRunner: "jest" /* Jest */, e2eTestRunner: "cypress" /* Cypress */, linter: linter_1.Linter.EsLint, strict: true }, options), { prefix: (_a = options.prefix) !== null && _a !== void 0 ? _a : defaultPrefix, name: appProjectName, appProjectRoot,
        e2eProjectRoot,
        e2eProjectName,
        parsedTags });
}
exports.normalizeOptions = normalizeOptions;
//# sourceMappingURL=normalize-options.js.map